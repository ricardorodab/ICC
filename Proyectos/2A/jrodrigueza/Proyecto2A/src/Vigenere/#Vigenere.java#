/*
 * Vigenere.java
 * Versión 2.0
 * Facultad de Ciencias,
 * Universidad Nacional Autónoma de México, México, DF.
 * Rodríguez Abreu, José Ricardo.
 * Zamora Gutierrez Victor.
 *
 * Este programa toma un archivo y lo cifra siguiendo el método       
 * de Vigenere de forma de cifrado polialfabético.                    
 *
 */

package Vigenere;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Scanner;
import java.util.NoSuchElementException;

/**
 * @author Rodríguez Abreu, José Ricardo y Zamora Gutierrez, Victor.
 * @version 2.0
 * @since Octubre 17, 2013
 */
public class Vigenere{
    
    private static final int a = 0x41;
    private static final int z = 0x5a;
    private static int s;
    
    /**
     * Metodo para crear una tabla que contenga el número de elementos.
     * que tiene el abecedario.
     * @return tablaCifrado - regresa la tabla de alafabeto Vigenere.
     */
    public static char[][] creaTabla(){
	char[][] tablaCifrado = new char[26][26];
	for(int i = 0; i < 26; i++){
	    for(int j = 0; j < 26; j++){
		int k = ((i+j) % 26) + 65;
		tablaCifrado[i][j] = (char)k;   
	    }	
	}
	return tablaCifrado;
    }   
    
    /**
     * Metodo que verifica si la palabra clave tiene algún elemento que no sea valido.
     * @param palabraClave - es la palabra que revisara que sean puras letras.
     * @return true - si la palabra clave tiene elementos que no sean letras.
     * @return false - si la palabra solo tiene letras.
     */
    public static boolean verificaClave(String palabraClave){
	for(int y = 0; y < palabraClave.length() ; y++){    
	    if(a > (s = (int)palabraClave.toUpperCase().charAt(y)) || (s > z)){
		System.err.println("El formato de la palabra clave es incorrecto a partir de el caracter "
				   + ( y + 1 ) +"." + " Asegúrese de que la palabra contenga unicamente letras.");
		return true;
	    }
	}
	return false;
    }
    
    /**
     * Metodo que cifra un archivo de texto con el metodo de Vigenere.
     * @param palabraClave - es la palabra clave con la que cifra.
     * @param entrada - es el archivo que contiene el texto a cifrar.
     * @param salida - es el archivo en el cual se escribira el codigo.
     */
    public static void cifra(String palabraClave, String entrada, String salida)
	throws IOException{
	String linea = null;
	BufferedReader texto = null;	 
	String mayusClave = palabraClave.toUpperCase();
	int k = 0;
	char[][] tabla = creaTabla();
	try{
	    texto = new BufferedReader(new FileReader(entrada));
	    BufferedWriter escritor = new BufferedWriter(new FileWriter(salida));
	    while((linea = texto.readLine()) != null){
		for(int u = 0; u < linea.length() ; u++){
		    char fila = linea.toUpperCase().charAt(u);
		    if(a > (s = (int)fila) || (s > z)){
			escritor.write(s);
		    }else {
			char columna = mayusClave.charAt(k % mayusClave.length());
			for(int q = a ; q <= z ; q++){
			    ichar r = (char)q;
			    if(r == fila){
				escritor.write(tabla[q-a][(int)columna-a]);
				k++;
				break;
			    }
			}
		    }
		    escritor.flush();
		}
	    }
	}catch (FileNotFoundException e){
	    System.err.println("El archivo de entrada no existe.");
	}finally{
	    if(texto != null){
		texto.close();	    
	    }	
	}
    }
    
    /**
     * Metodo que descifra un archivo de texto con el metodo de Vigenere.
     * @param palabraClave - es la palabra clave con la que se descifra.
     * @param entrada - es el archivo que contiene el texto a descifrar.
     * @param salida - es el archivo en el cual se escribira el texto descifrado.
     */    
    public static void descifra(String palabraClave, String entrada, String salida)
	throws IOException{
	String linea = null;
	BufferedReader texto = null;	 
	String mayusClave = palabraClave.toUpperCase();
	int k = 0;
	char[][] tabla = creaTabla();
	try{
	    texto = new BufferedReader(new FileReader(entrada));
	    BufferedWriter escritor = new BufferedWriter(new FileWriter(salida));
	    while((linea = texto.readLine()) != null){
		for(int u = 0; u < linea.length() ; u++){
		    char caracter = linea.toUpperCase().charAt(u);
		    if(a > (s = (int)caracter) || (s > z)){
			escritor.write(s);
		    }else {
			char columna = mayusClave.charAt(k % mayusClave.length());
			for(int q = a ; q <= z ; q++){
			    if(caracter == tabla[q-a][(int)columna-a]){
				escritor.write(q);
				k++;
				break;
			    }
			}
		    }
		    escritor.flush();
		}
	    }
	}catch (FileNotFoundException e){
	    System.err.println("El archivo de entrada no existe.");
	}
	finally{
	    if(texto != null){
		texto.close();	    
	    }	
	}
    }
} //Fin de Vigenere.java
